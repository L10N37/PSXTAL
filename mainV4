//                                          L10N37 / VAJSKIDS CONSOLES 50/60HZ PSXTAL SELECTOR , July 2021
//                                                                                ...Techicially version 31,204
// wasn't even thinking about this code and it just came to mind that there was an if, else if, else in the main.. realised it could just be swapped
// to if (ntsc) else (pal)
// as oppose to if (no keypress / then PAL, else if  keypress / then NTSC / else PAL) but then I decided to do a restructure, it literally took 2 minutes
// and it's much better now
// Now we hold the key combo for 2 seconds, then release and there's a smooth transition back and forth. Prior if you held the combo it would eventually switch
// even whilst still  holding the key combo and I also couldn't work out why every now and then it would jump from NTSC to PAL sooner than the delay function
// should have permitted (but never the other way around). Seems to be fixed.

//V3. Tidied it up, shaved a couple percent off total size (actually back to 1% smaller). Still no relevance to when it's finished but If i couldn't optimise
// this a little I don't think I stand a chance going further with the project as it gets difficult soon as PS2X isn't working.. next is serial monitor stuff
// involving a lot of PSX/PS2 specific controller interface tech stuff.. wish me luck

//Now a single START+SELECT combo and a few second delay until a mode change

//V1.4 Breaking into separate loops will cause issues down the track, one being likely doubling any further code up making this twice the size it needs to be
// expanded my 'vocabulary' and tried a few new things. Now uses a new variable to lock  and change modes and stays in main(). Keep in mind I'm new to programming
// and taking baby steps. 

// trying to get new PSX controller library by SukkoPera working in the interim.


/*Default boot mode is PAL, boot into NTSC  straight up with L1, R2, START or select held (or any combination of) <--This was changed
  switch between video modes with L1+R2+START+SELECT held simultaneously for 7 seconds */

const int NTSC_MODE     = (0B01010000);   //  ***   set D register to two modes for easier readability ***        //PORTD maps to Arduino digital pins 0 to 7
const int PAL_MODE      = (0B10000100);   //   ***   BIT 7 OR BIT 8 high dependant on mode              ***
const int keypress      = (0B000000);    // START+SELECT                                                         //PORTB maps to Arduino digital pins 8 to 13
int _50HZ = 0;        // variable set to latch (1 mode on, 0 mode off)
int _60HZ = 0;        //


void setup() {
  //Define registers
#define pin_register PINB  // 
#define LATCH PORTD   // Port D contains one of 2 states, latch onto PAL or latch onto NTSC mode

  //Define pins
#define PAL_pin 7         // NTSC XTAL VCC   PORT D
#define NTSC_pin 6        // PAL XTAL VCC     PORT D
#define ST_press 11       //PORT B
#define SEL_press 10       //PORT B

  //Set pin modes

  pinMode (12, INPUT);          //13   Unused pin(part of port B digital pins 13:8 - little endian)
  pinMode (13, INPUT);          //12   Unused pin(part of port B digital pins 13:8 - little endian)
  pinMode (ST_press, INPUT_PULLUP);    //11                // input for START keypress
  pinMode (SEL_press, INPUT_PULLUP);   //10                    // input for SELECT keypress
  pinMode (4, OUTPUT);  // PAL MODE "on" status light
  pinMode (2, OUTPUT);  // NTSC MODE "on" status light
  pinMode (PAL_pin, OUTPUT);           //7          // OUTPUT for PAL VCC
  pinMode (NTSC_pin, OUTPUT);          //6          //OUTPUT for NTSC VCC

  digitalWrite (12, LOW) ;  //** make sure unused pins in PORT B register are set low   **
  digitalWrite (13, LOW);   //**                                                        **
  digitalWrite (9, LOW);   //**                                                        **
  digitalWrite (8, LOW);   //**                                                        **
}

void loop() {


  if (pin_register == keypress) {
    _60HZ = 1;
  } else {
    _50HZ = 1;
  }
  do {
    LATCH = NTSC_MODE;
    if (pin_register == keypress) {
      _60HZ = 0;
      _50HZ = 1;
    }
  }
  while (_60HZ == 1);
  delay (900);


  do {
    LATCH = PAL_MODE;
    if (pin_register == keypress) {
      _60HZ = 1;
      _50HZ = 0;
    }
  }
  while (_50HZ == 1);
  delay (900);
}
