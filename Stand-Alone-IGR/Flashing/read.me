
Due to the price at the time ...the board really should have being designed for LTG8F328P
It was designed for ATMEGA328P though.

Additionally, the LTG8F328P seem to come preflashed with a bootloader and these (assumed to be clones) of the Atmega328P don't come with a bootloader.

The bootloader allows flashing over UART via USB like the premade dev boards, just open the sketch in Arduino IDE and upload directly.
This means the UART header pins on the board would work straight up, had it being designed for the LGT8F328P.



The Atmega clones cost (if you look hard enough) me 36.10AUD for a quantity of 10 - prices differ, so really hunt.
They actually arrived super quick with the pin adapter too. so $3.60ea.

At this stage, I can not find bare LGT8F328P for any cheaper. A week or two back they were obtainable for about 2.00AUD ea. (both prices inclusive of shipping)

This makes me feel a little better about the current design.


Now the issue with no bootloader.

You can not install the ATMEGA328P straight onto the PCB and flash the DFO program over UART with a serial-USB adapter and header holes due to the missing
bootloader.


There are a few options here - redesign the board for direct ISP flash. This differs on whether you use LGT8F328P or Atmega328P/168P (328p has double the memory of the 168P, but no difference prise wise).

Then ISP flash the sketches exported HEX file directly via your ISP flashing header.

You can flash via ISP using another MCU - or with an EXGecu Pro TL866II +



You need the TQFP32 to DIP28 adapter which slots straight into the TL866II+ to flash either the bootloader with correct fuse settings or the DFO software directly.


Next option:

Leave the board as is, the TL866II+ is basically the standard among hobbyists now for flashing needs and a lot of people own these.

So I've provided the fuse settings for flashing the Bootloader in XGPro, then fit it on the PCB, then flash it over UART in arduino IDE or with AVRDude (either the GUI or command line version)



Next Option:

Flash the exported DFO apps HEX directly via the XGpro software, then install it onto the PCB - I would assume leaving the fuse settings on default would work.

This renders the UART / serial->USB programming header on the board useless and you won't be able to make any changes to the software flashed on the MCU after.
